version: "3.0"
services:
# Comcast network
  client-c1:
    container_name: "build-your-own-internet-client-c1"
    build:
      context: .
      dockerfile: Dockerfile_host
    image: "build-your-own-internet-host"
    hostname: client-c1
    networks:
      one-one-net:
        ipv4_address: 1.1.0.200
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0
  client-c2:
    container_name: "build-your-own-internet-client-c2"
    build:
      context: .
      dockerfile: Dockerfile_host
    image: "build-your-own-internet-host"
    hostname: client-c2
    networks:
      one-three-net:
        ipv4_address: 1.3.0.200
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0

  resolver-c:
    container_name: "build-your-own-internet-resolver-c"
    build:
      context: .
      dockerfile: Dockerfile_resolver
    image: "build-your-own-internet-resolver"
    hostname: resolver-c
    networks:
      one-two-net:
        ipv4_address: 1.2.0.100
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0

  router-c2:
    container_name: "build-your-own-internet-router-c2"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-c2
    networks:
      one-three-net:
        ipv4_address: 1.3.0.2
      one-two-net:
        ipv4_address: 1.2.0.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
  router-c3:
    container_name: "build-your-own-internet-router-c3"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-c3
    networks:
      one-one-net:
        ipv4_address: 1.1.0.3
      one-two-net:
        ipv4_address: 1.2.0.3
      three-one-net:
        ipv4_address: 3.1.0.3
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
  # Telia
  router-t6:
    container_name: "build-your-own-internet-router-t6"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-t6
    networks:
      three-six-seven-net:
        ipv4_address: 3.6.7.6
      three-six-eight-net:
        ipv4_address: 3.6.8.6
      three-one-net:
        ipv4_address: 3.1.0.6
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
  router-t7:
    container_name: "build-your-own-internet-router-t7"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-t7
    networks:
      three-four-net:
        ipv4_address: 3.4.0.7
      three-six-seven-net:
        ipv4_address: 3.6.7.7
      three-seven-eight-net:
        ipv4_address: 3.7.8.7
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
  router-t8:
    container_name: "build-your-own-internet-router-t8"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-t8
    networks:
      three-nine-net:
        ipv4_address: 3.9.0.8
      three-six-eight-net:
        ipv4_address: 3.6.8.8
      three-seven-eight-net:
        ipv4_address: 3.7.8.8
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0

  # SuperCorp
  server-s1:
    container_name: "build-your-own-internet-server-s1"
    build:
      context: .
      dockerfile: Dockerfile_host
    image: "build-your-own-internet-host"
    hostname: server-s1
    networks:
      nine-three-net:
        ipv4_address: 9.3.0.10
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0
  server-s2:
    container_name: "build-your-own-internet-server-s2"
    build:
      context: .
      dockerfile: Dockerfile_host
    image: "build-your-own-internet-host"
    hostname: server-s2
    networks:
      nine-two-net:
        ipv4_address: 9.2.0.200
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0
  resolver-s:
    container_name: "build-your-own-internet-resolver-s"
    build:
      context: .
      dockerfile: Dockerfile_resolver
    image: "build-your-own-internet-resolver"
    hostname: resolver-s
    networks:
      nine-two-net:
        ipv4_address: 9.2.0.100
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0
  authoritative-s:
    container_name: "build-your-own-internet-authoritative-s"
    build:
      context: .
      dockerfile: Dockerfile_dns
    image: "build-your-own-internet-dns"
    hostname: authoritative-s
    networks:
      nine-one-net:
        ipv4_address: 9.1.0.100
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0
  router-s2:
    container_name: "build-your-own-internet-router-s2"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-s2
    networks:
      nine-three-net:
        ipv4_address: 9.3.0.2
      three-nine-net:
        ipv4_address: 3.9.0.2
      nine-two-net:
        ipv4_address: 9.2.0.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
  router-s3:
    container_name: "build-your-own-internet-router-s3"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-s3
    networks:
      nine-one-net:
        ipv4_address: 9.1.0.3
      nine-two-net:
        ipv4_address: 9.2.0.3
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0

  # Netnod
  router-n2:
    container_name: "build-your-own-internet-router-n2"
    build:
      context: .
      dockerfile: Dockerfile_router
    image: "build-your-own-internet-router"
    hostname: router-n2
    networks:
      one-oh-one-hundo-net:
        ipv4_address: 101.0.1.2
      three-four-net:
        ipv4_address: 3.4.0.2
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.rp_filter=0
  tlddns-n:
    container_name: "build-your-own-internet-tlddns-n"
    build:
      context: .
      dockerfile: Dockerfile_dns
    image: "build-your-own-internet-dns"
    hostname: tlddns-n
    networks:
      one-oh-one-hundo-net:
        ipv4_address: 101.0.1.101
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0
  rootdns-n:
    container_name: "build-your-own-internet-rootdns-n"
    build:
      context: .
      dockerfile: Dockerfile_dns
    image: "build-your-own-internet-dns"
    hostname: rootdns-n
    networks:
      one-oh-one-hundo-net:
        ipv4_address: 101.0.1.100
    cap_add:
      - NET_ADMIN
      - SYS_ADMIN
    sysctls:
      - net.ipv4.ip_forward=0

networks:
  one-one-net:
    name: "build-your-own-internet-one-one-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 1.1.0.0/16
  one-two-net:
    name: "build-your-own-internet-one-two-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 1.2.0.0/16
  one-three-net:
    name: "build-your-own-internet-one-three-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 1.3.0.0/16

  three-one-net:
    name: "build-your-own-internet-three-one-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 3.1.0.0/16
  three-four-net:
    name: "build-your-own-internet-three-four-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 3.4.0.0/16
  three-nine-net:
    name: "build-your-own-internet-three-nine-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 3.9.0.0/16
  three-six-seven-net:
    name: "build-your-own-internet-three-six-seven-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 3.6.7.0/24
  three-six-eight-net:
    name: "build-your-own-internet-three-six-eight-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 3.6.8.0/24
  three-seven-eight-net:
    name: "build-your-own-internet-three-seven-eight-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 3.7.8.0/24

  nine-one-net:
    name: "build-your-own-internet-nine-one-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 9.1.0.0/16
  nine-two-net:
    name: "build-your-own-internet-nine-two-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 9.2.0.0/16
  nine-three-net:
    name: "build-your-own-internet-nine-three-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 9.3.0.0/16

  one-oh-one-hundo-net:
    name: "build-your-own-internet-one-oh-one-hundo-net"
    driver: bridge
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: 'false'
      com.docker.network.endpoint.sysctls: "net.ipv4.conf.IFNAME.rp_filter=0"
    ipam:
      driver: default
      config:
        - subnet: 101.0.1.0/24